{"version":3,"sources":["components/Footer/index.tsx","components/PageTitleWrapper/index.tsx","components/Label/index.tsx","content/applications/Transactions/PageHeader.tsx","content/applications/Transactions/BulkActions.tsx","content/applications/Transactions/RecentOrdersTable.tsx","content/applications/Transactions/RecentOrders.tsx","content/applications/Transactions/index.tsx"],"names":["FooterWrapper","styled","Box","theme","spacing","Footer","maxWidth","py","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","PageTitle","PageTitleWrapper","children","LabelWrapper","colors","alpha","black","typography","pxToRem","general","borderRadius","primary","lighter","palette","main","secondary","success","warning","error","info","Label","className","color","rest","PageHeader","Grid","container","item","Typography","component","gutterBottom","Button","mt","startIcon","fontSize","ButtonError","contrastText","dark","BulkActions","useState","onMenuOpen","menuOpen","moreRef","useRef","ml","IconButton","onClick","ref","p","Menu","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","button","ListItemText","getStatusLabel","cryptoOrderStatus","failed","text","completed","pending","RecentOrdersTable","cryptoOrders","selectedCryptoOrders","setSelectedCryptoOrders","selectedBulkActions","length","page","setPage","limit","setLimit","status","filters","setFilters","filteredCryptoOrders","filter","cryptoOrder","matches","applyFilters","paginatedCryptoOrders","slice","applyPagination","selectedSomeCryptoOrders","selectedAllCryptoOrders","useTheme","Card","flex","CardHeader","action","width","FormControl","fullWidth","InputLabel","Select","value","onChange","e","prevFilters","label","autoWidth","id","name","map","statusOption","MenuItem","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","padding","Checkbox","checked","indeterminate","event","align","TableBody","isCryptoOrderSelected","includes","hover","selected","cryptoOrderId","prevSelected","fontWeight","noWrap","orderDetails","format","orderDate","orderID","sourceName","sourceDesc","amountCrypto","cryptoCurrency","numeral","amount","currency","Tooltip","arrow","background","size","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","RecentOrders","Date","getTime","subDays","ApplicationsTransactions","Container","direction"],"mappings":"yKAAA,sDAGMA,EAAgBC,YAAOC,IAAPD,EACpB,gBAAGE,EAAH,EAAGA,MAAH,6DAEgBA,EAAMC,QAAQ,GAF9B,YA+BaC,IAzBf,WACE,OACE,cAACL,EAAD,UACE,cAAC,IAAD,CAAWM,SAAS,KAApB,SACE,eAAC,IAAD,CACEC,GAAI,EACJC,QAAS,CAAEC,GAAI,QAASC,GAAI,QAC5BC,WAAW,SACXC,UAAW,CAAEH,GAAI,SAAUC,GAAI,QAC/BG,eAAe,gBALjB,UAOE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYC,QAAQ,YAApB,kEAIF,eAAC,IAAD,CAAYC,GAAI,CAAEC,GAAI,CAAEP,GAAI,EAAGC,GAAI,IAAOI,QAAQ,YAAlD,wBACa,cAAC,IAAD,CAAMG,KAAK,sBAAsBC,OAAO,SAASC,IAAI,sBAArD,qC,iCC1BvB,oCAKMC,EAAYnB,YAAOC,IAAPD,EAChB,gBAAGE,EAAH,EAAGA,MAAH,mCACiBA,EAAMC,QAAQ,EAAG,GADlC,UAyBaiB,IAhBqC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrD,OACE,mCACE,cAACF,EAAD,UACE,cAAC,IAAD,CAAWd,SAAS,KAApB,SACGgB,U,uGCXLC,EAAetB,YAAO,OAAPA,EACnB,gBAAGE,EAAH,EAAGA,MAAH,0CACwBA,EAAMqB,OAAOC,MAAMC,MAAM,GADjD,6BAEevB,EAAMC,QAAQ,GAAK,GAFlC,+BAGiBD,EAAMwB,WAAWC,QAAQ,IAH1C,mCAIqBzB,EAAM0B,QAAQC,aAJnC,yHAQkB3B,EAAMC,QAAQ,GARhC,2FAY4BD,EAAMqB,OAAOO,QAAQC,QAZjD,+BAaiB7B,EAAM8B,QAAQF,QAAQG,KAbvC,qFAiB4B/B,EAAMqB,OAAOW,UAAUH,QAjBnD,+BAkBiB7B,EAAM8B,QAAQE,UAAUD,KAlBzC,mFAsB4B/B,EAAMqB,OAAOY,QAAQJ,QAtBjD,+BAuBiB7B,EAAM8B,QAAQG,QAAQF,KAvBvC,mFA2B4B/B,EAAMqB,OAAOa,QAAQL,QA3BjD,+BA4BiB7B,EAAM8B,QAAQI,QAAQH,KA5BvC,uFAgC4B/B,EAAMqB,OAAOc,MAAMN,QAhC/C,+BAiCiB7B,EAAM8B,QAAQK,MAAMJ,KAjCrC,gFAqC4B/B,EAAMqB,OAAOe,KAAKP,QArC9C,+BAsCiB7B,EAAM8B,QAAQM,KAAKL,KAtCpC,6BAsEaM,IA1Be,SAAC,GAKzB,EAJJC,UAIK,IAAD,IAHJC,aAGI,MAHI,YAGJ,EAFJpB,EAEI,EAFJA,SACGqB,EACC,iBACJ,OACE,cAACpB,EAAD,yBAAckB,UAAW,YAAcC,GAAWC,GAAlD,aACGrB,O,yGC7BQsB,MA9Bf,WAOE,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACjC,eAAe,gBAAgBF,WAAW,SAA1D,UACE,eAACkC,EAAA,EAAD,CAAME,MAAI,EAAV,UACE,cAACC,EAAA,EAAD,CAAYlC,QAAQ,KAAKmC,UAAU,KAAKC,cAAY,EAApD,0BAGA,eAACF,EAAA,EAAD,CAAYlC,QAAQ,YAApB,UATE,iBASF,6CAIF,cAAC+B,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACI,EAAA,EAAD,CACEpC,GAAI,CAAEqC,GAAI,CAAE3C,GAAI,EAAGC,GAAI,IACvBI,QAAQ,YACRuC,UAAW,cAAC,IAAD,CAAgBC,SAAS,UAHtC,sC,yWCLFC,EAActD,YAAOkD,IAAPlD,EAClB,gBAAGE,EAAH,EAAGA,MAAH,mCACiBA,EAAMqB,OAAOc,MAAMJ,KADpC,0BAEY/B,EAAM8B,QAAQK,MAAMkB,aAFhC,oDAKoBrD,EAAMqB,OAAOc,MAAMmB,KALvC,sBA2EaC,MAjEf,WACE,MAA+BC,oBAAkB,GAAjD,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAUC,iBAAiC,MAUjD,OACE,qCACE,eAAC7D,EAAA,EAAD,CAAKM,QAAQ,OAAOG,WAAW,SAASE,eAAe,gBAAvD,UACE,eAACX,EAAA,EAAD,CAAKM,QAAQ,OAAOG,WAAW,SAA/B,UACE,cAACqC,EAAA,EAAD,CAAYlC,QAAQ,KAAK4B,MAAM,iBAA/B,2BAGA,cAACa,EAAD,CACExC,GAAI,CAAEiD,GAAI,GACVX,UAAW,cAAC,IAAD,IACXvC,QAAQ,YAHV,uBAQF,cAACmD,EAAA,EAAD,CACEvB,MAAM,UACNwB,QAzBS,WACfL,GAAS,IAyBHM,IAAKL,EACL/C,GAAI,CAAEiD,GAAI,EAAGI,EAAG,GAJlB,SAME,cAAC,IAAD,SAIJ,cAACC,EAAA,EAAD,CACEC,aAAW,EACXC,SAAUT,EAAQU,QAClBC,KAAMb,EACNc,QAjCY,WAChBb,GAAS,IAiCLc,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,UAXhB,SAeE,eAACE,EAAA,EAAD,CAAMhE,GAAI,CAAEqD,EAAG,GAAKnB,UAAU,MAA9B,UACE,cAAC+B,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CAAcnD,QAAQ,2BAExB,cAACiD,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CAAcnD,QAAQ,kCC3C5BoD,GAAiB,SAACC,GACtB,IAeA,EAfY,CACVC,OAAQ,CACNC,KAAM,SACN5C,MAAO,SAET6C,UAAW,CACTD,KAAM,YACN5C,MAAO,WAET8C,QAAS,CACPF,KAAM,UACN5C,MAAO,YAIsB0C,GAAzBE,EAAR,EAAQA,KAAM5C,EAAd,EAAcA,MAEd,OAAO,cAACF,EAAA,EAAD,CAAOE,MAAOA,EAAd,SAAsB4C,KA0BzBG,GAAgD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEvD,EAAwD/B,mBACtD,IADF,mBAAOgC,EAAP,KAA6BC,EAA7B,KAGMC,EAAsBF,EAAqBG,OAAS,EAC1D,EAAwBnC,mBAAiB,GAAzC,mBAAOoC,EAAP,KAAaC,EAAb,KACA,EAA0BrC,mBAAiB,GAA3C,mBAAOsC,EAAP,KAAcC,EAAd,KACA,EAA8BvC,mBAAkB,CAC9CwC,OAAQ,OADV,mBAAOC,EAAP,KAAgBC,EAAhB,KAsEMC,EArGa,SACnBZ,EACAU,GAEA,OAAOV,EAAaa,QAAO,SAACC,GAC1B,IAAIC,GAAU,EAMd,OAJIL,EAAQD,QAAUK,EAAYL,SAAWC,EAAQD,SACnDM,GAAU,GAGLA,KA0FoBC,CAAahB,EAAcU,GAClDO,EAvFgB,SACtBjB,EACAK,EACAE,GAEA,OAAOP,EAAakB,MAAMb,EAAOE,EAAOF,EAAOE,EAAQA,GAkFzBY,CAC5BP,EACAP,EACAE,GAEIa,EACJnB,EAAqBG,OAAS,GAC9BH,EAAqBG,OAASJ,EAAaI,OACvCiB,EACJpB,EAAqBG,SAAWJ,EAAaI,OACzC3F,EAAQ6G,cAEd,OACE,eAACC,EAAA,EAAD,WACGpB,GACC,cAAC3F,EAAA,EAAD,CAAKgH,KAAM,EAAG9C,EAAG,EAAjB,SACE,cAAC,EAAD,OAGFyB,GACA,cAACsB,EAAA,EAAD,CACEC,OACE,cAAClH,EAAA,EAAD,CAAKmH,MAAO,IAAZ,SACE,eAACC,EAAA,EAAD,CAAaC,WAAS,EAACzG,QAAQ,WAA/B,UACE,cAAC0G,EAAA,EAAD,qBACA,cAACC,EAAA,EAAD,CACEC,MAAOtB,EAAQD,QAAU,MACzBwB,SA3EW,SAACC,GAC1B,IAAIF,EAAQ,KAEW,QAAnBE,EAAE1G,OAAOwG,QACXA,EAAQE,EAAE1G,OAAOwG,OAGnBrB,GAAW,SAACwB,GAAD,mBAAC,eACPA,GADM,IAET1B,OAAQuB,QAmEII,MAAM,SACNC,WAAS,EAJX,SA5FQ,CACpB,CACEC,GAAI,MACJC,KAAM,OAER,CACED,GAAI,YACJC,KAAM,aAER,CACED,GAAI,UACJC,KAAM,WAER,CACED,GAAI,SACJC,KAAM,WAmFqBC,KAAI,SAACC,GAAD,OACjB,cAACC,EAAA,EAAD,CAAgCV,MAAOS,EAAaH,GAApD,SACGG,EAAaF,MADDE,EAAaH,cAQtCK,MAAM,kBAGV,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,EAAA,EAAD,CACEnG,MAAM,UACNoG,QAAS/B,EACTgC,cAAejC,EACfa,SAxFoB,SAClCqB,GAEApD,EACEoD,EAAM9H,OAAO4H,QACTpD,EAAawC,KAAI,SAAC1B,GAAD,OAAiBA,EAAYwB,MAC9C,SAqFI,cAACW,EAAA,EAAD,4BACA,cAACA,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,CAAWM,MAAM,QAAjB,oBACA,cAACN,EAAA,EAAD,CAAWM,MAAM,QAAjB,oBACA,cAACN,EAAA,EAAD,CAAWM,MAAM,QAAjB,0BAGJ,cAACC,EAAA,EAAD,UACGvC,EAAsBuB,KAAI,SAAC1B,GAC1B,IAAM2C,EAAwBxD,EAAqByD,SACjD5C,EAAYwB,IAEd,OACE,eAACU,EAAA,EAAD,CACEW,OAAK,EAELC,SAAUH,EAHZ,UAKE,cAACR,EAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,EAAA,EAAD,CACEnG,MAAM,UACNoG,QAASK,EACTxB,SAAU,SAACqB,GAAD,OAtG5BO,EAuGsD/C,EAAYwB,QArG7DrC,EAAqByD,SAASG,GAMjC3D,GAAwB,SAAC4D,GAAD,OACtBA,EAAajD,QAAO,SAACyB,GAAD,OAAQA,IAAOuB,QANrC3D,GAAwB,SAAC4D,GAAD,4BACnBA,GADmB,CAEtBD,QAP6B,IAEjCA,GAyGkB7B,MAAOyB,MAGX,eAACR,EAAA,EAAD,WACE,cAAC3F,EAAA,EAAD,CACElC,QAAQ,QACR2I,WAAW,OACX/G,MAAM,eACNQ,cAAY,EACZwG,QAAM,EALR,SAOGlD,EAAYmD,eAEf,cAAC3G,EAAA,EAAD,CAAYlC,QAAQ,QAAQ4B,MAAM,iBAAiBgH,QAAM,EAAzD,SACGE,YAAOpD,EAAYqD,UAAW,qBAGnC,cAAClB,EAAA,EAAD,UACE,cAAC3F,EAAA,EAAD,CACElC,QAAQ,QACR2I,WAAW,OACX/G,MAAM,eACNQ,cAAY,EACZwG,QAAM,EALR,SAOGlD,EAAYsD,YAGjB,eAACnB,EAAA,EAAD,WACE,cAAC3F,EAAA,EAAD,CACElC,QAAQ,QACR2I,WAAW,OACX/G,MAAM,eACNQ,cAAY,EACZwG,QAAM,EALR,SAOGlD,EAAYuD,aAEf,cAAC/G,EAAA,EAAD,CAAYlC,QAAQ,QAAQ4B,MAAM,iBAAiBgH,QAAM,EAAzD,SACGlD,EAAYwD,gBAGjB,eAACrB,EAAA,EAAD,CAAWM,MAAM,QAAjB,UACE,eAACjG,EAAA,EAAD,CACElC,QAAQ,QACR2I,WAAW,OACX/G,MAAM,eACNQ,cAAY,EACZwG,QAAM,EALR,UAOGlD,EAAYyD,aACZzD,EAAY0D,kBAEf,cAAClH,EAAA,EAAD,CAAYlC,QAAQ,QAAQ4B,MAAM,iBAAiBgH,QAAM,EAAzD,SACGS,IAAQ3D,EAAY4D,QAAQR,OAA5B,UACIpD,EAAY6D,SADhB,gBAKL,cAAC1B,EAAA,EAAD,CAAWM,MAAM,QAAjB,SACG9D,GAAeqB,EAAYL,UAE9B,eAACwC,EAAA,EAAD,CAAWM,MAAM,QAAjB,UACE,cAACqB,EAAA,EAAD,CAASjC,MAAM,aAAakC,OAAK,EAAjC,SACE,cAACtG,EAAA,EAAD,CACElD,GAAI,CACF,UAAW,CACTyJ,WAAYrK,EAAMqB,OAAOO,QAAQC,SAEnCU,MAAOvC,EAAM8B,QAAQF,QAAQG,MAE/BQ,MAAM,UACN+H,KAAK,QARP,SAUE,cAAC,IAAD,CAAiBnH,SAAS,cAG9B,cAACgH,EAAA,EAAD,CAASjC,MAAM,eAAekC,OAAK,EAAnC,SACE,cAACtG,EAAA,EAAD,CACElD,GAAI,CACF,UAAW,CAAEyJ,WAAYrK,EAAMqB,OAAOc,MAAMN,SAC5CU,MAAOvC,EAAM8B,QAAQK,MAAMJ,MAE7BQ,MAAM,UACN+H,KAAK,QANP,SAQE,cAAC,IAAD,CAAmBnH,SAAS,mBAhG7BkD,EAAYwB,cA0G7B,cAAC9H,EAAA,EAAD,CAAKkE,EAAG,EAAR,SACE,cAACsG,EAAA,EAAD,CACEzH,UAAU,MACV0H,MAAOrE,EAAqBR,OAC5B8E,aA/LiB,SAAC5B,EAAY6B,GACpC7E,EAAQ6E,IA+LFC,oBA5LkB,SAAC9B,GACzB9C,EAAS6E,SAAS/B,EAAM9H,OAAOwG,SA4LzB3B,KAAMA,EACNiF,YAAa/E,EACbgF,mBAAoB,CAAC,EAAG,GAAI,GAAI,YAW1CxF,GAAkByF,aAAe,CAC/BxF,aAAc,IAGDD,U,UC3NA0F,OA9If,WAEE,IAAMzF,EAA8B,CAClC,CACEsC,GAAI,IACJ2B,aAAc,eACdE,WAAW,IAAIuB,MAAOC,UACtBlF,OAAQ,YACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,QACdG,OAAQ,MACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,GAAGC,UAClClF,OAAQ,YACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,WACdG,OAAQ,QACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,GAAGC,UAClClF,OAAQ,SACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,WACdG,OAAQ,QACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,IAAIC,UACnClF,OAAQ,YACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,WACdG,OAAQ,QACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,IAAIC,UACnClF,OAAQ,UACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,WACdG,OAAQ,QACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,IAAIC,UACnClF,OAAQ,YACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,WACdG,OAAQ,QACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,WAAW,IAAIuB,MAAOC,UACtBlF,OAAQ,UACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,SACdG,OAAQ,OACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,kBACdE,UAAWyB,aAAQ,IAAIF,KAAQ,IAAIC,UACnClF,OAAQ,YACR2D,QAAS,eACTC,WAAY,iBACZC,WAAY,WACZC,aAAc,SACdG,OAAQ,MACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,IAAIC,UACnClF,OAAQ,YACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,aACdG,OAAQ,OACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,KACJ2B,aAAc,kBACdE,UAAWyB,aAAQ,IAAIF,KAAQ,KAAKC,UACpClF,OAAQ,SACR2D,QAAS,eACTC,WAAY,kBACZC,WAAY,wBACZC,aAAc,SACdG,OAAQ,KACRF,eAAgB,MAChBG,SAAU,MAId,OACE,cAACpD,EAAA,EAAD,UACE,cAAC,GAAD,CAAmBvB,aAAcA,OC3GxB6F,UA3Bf,WACE,OACE,qCACE,cAAC,IAAD,UACE,kEAEF,cAAClK,EAAA,EAAD,UACE,cAAC,EAAD,MAEF,cAACmK,EAAA,EAAD,CAAWlL,SAAS,KAApB,SACE,cAACuC,EAAA,EAAD,CACEC,WAAS,EACT2I,UAAU,MACV5K,eAAe,SACfF,WAAW,UACXP,QAAS,EALX,SAOE,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACtC,GAAI,GAAf,SACE,cAAC,GAAD,UAIN,cAACJ,EAAA,EAAD","file":"static/js/25.dcbd679e.chunk.js","sourcesContent":["import { Box, Container, Link, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst FooterWrapper = styled(Box)(\n  ({ theme }) => `\n        border-radius: 0;\n        margin: ${theme.spacing(3)} 0;\n`\n);\n\nfunction Footer() {\n  return (\n    <FooterWrapper>\n      <Container maxWidth=\"lg\">\n        <Box\n          py={3}\n          display={{ xs: 'block', md: 'flex' }}\n          alignItems=\"center\"\n          textAlign={{ xs: 'center', md: 'left' }}\n          justifyContent=\"space-between\"\n        >\n          <Box>\n            <Typography variant=\"subtitle1\">\n              &copy; 2021 - Tokyo Free White React Admin Dashboard\n            </Typography>\n          </Box>\n          <Typography sx={{ pt: { xs: 2, md: 0 } }} variant=\"subtitle1\">\n            Crafted by <Link href=\"https://bloomui.com\" target=\"_blank\" rel=\"noopener noreferrer\">BloomUI.com</Link>\n          </Typography>\n        </Box>\n      </Container>\n    </FooterWrapper>\n  );\n}\n\nexport default Footer;\n","import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success' | 'info';\n  children?: ReactNode;\n}\n\nconst LabelWrapper = styled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  ...rest\n}) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import { Typography, Button, Grid } from '@mui/material';\n\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\n\nfunction PageHeader() {\n\n  const user =\n  {\n    name: 'Catherine Pike',\n    avatar: '/static/images/avatars/1.jpg'\n  };\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          Transactions\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {user.name}, these are your recent transactions\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          sx={{ mt: { xs: 2, md: 0 } }}\n          variant=\"contained\"\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n        >\n          Create transaction\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import { useState, useRef } from 'react';\n\nimport {\n  Box,\n  Menu,\n  IconButton,\n  Button,\n  ListItemText,\n  ListItem,\n  List,\n  Typography\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\n\nconst ButtonError = styled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nfunction BulkActions() {\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\n  const moreRef = useRef<HTMLButtonElement | null>(null);\n\n  const openMenu = (): void => {\n    menuOpen(true);\n  };\n\n  const closeMenu = (): void => {\n    menuOpen(false);\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            Bulk actions:\n          </Typography>\n          <ButtonError\n            sx={{ ml: 1 }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n          >\n            Delete\n          </ButtonError>\n        </Box>\n        <IconButton\n          color=\"primary\"\n          onClick={openMenu}\n          ref={moreRef}\n          sx={{ ml: 2, p: 1 }}\n        >\n          <MoreVertTwoToneIcon />\n        </IconButton>\n      </Box>\n\n      <Menu\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n\n      >\n        <List sx={{ p: 1 }} component=\"nav\">\n          <ListItem button>\n            <ListItemText primary=\"Bulk delete selected\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemText primary=\"Bulk edit selected\" />\n          </ListItem>\n        </List>\n      </Menu>\n    </>\n  );\n}\n\nexport default BulkActions;\n","import { FC, ChangeEvent, useState } from 'react';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  Divider,\n  Box,\n  FormControl,\n  InputLabel,\n  Card,\n  Checkbox,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableContainer,\n  Select,\n  MenuItem,\n  Typography,\n  useTheme,\n  CardHeader\n} from '@mui/material';\n\nimport Label from 'src/components/Label';\nimport { CryptoOrder, CryptoOrderStatus } from 'src/models/crypto_order';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\nimport BulkActions from './BulkActions';\n\ninterface RecentOrdersTableProps {\n  className?: string;\n  cryptoOrders: CryptoOrder[];\n}\n\ninterface Filters {\n  status?: CryptoOrderStatus;\n}\n\nconst getStatusLabel = (cryptoOrderStatus: CryptoOrderStatus): JSX.Element => {\n  const map = {\n    failed: {\n      text: 'Failed',\n      color: 'error'\n    },\n    completed: {\n      text: 'Completed',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    }\n  };\n\n  const { text, color }: any = map[cryptoOrderStatus];\n\n  return <Label color={color}>{text}</Label>;\n};\n\nconst applyFilters = (\n  cryptoOrders: CryptoOrder[],\n  filters: Filters\n): CryptoOrder[] => {\n  return cryptoOrders.filter((cryptoOrder) => {\n    let matches = true;\n\n    if (filters.status && cryptoOrder.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n};\n\nconst applyPagination = (\n  cryptoOrders: CryptoOrder[],\n  page: number,\n  limit: number\n): CryptoOrder[] => {\n  return cryptoOrders.slice(page * limit, page * limit + limit);\n};\n\nconst RecentOrdersTable: FC<RecentOrdersTableProps> = ({ cryptoOrders }) => {\n\n  const [selectedCryptoOrders, setSelectedCryptoOrders] = useState<string[]>(\n    []\n  );\n  const selectedBulkActions = selectedCryptoOrders.length > 0;\n  const [page, setPage] = useState<number>(0);\n  const [limit, setLimit] = useState<number>(5);\n  const [filters, setFilters] = useState<Filters>({\n    status: null\n  });\n\n  const statusOptions = [\n    {\n      id: 'all',\n      name: 'All'\n    },\n    {\n      id: 'completed',\n      name: 'Completed'\n    },\n    {\n      id: 'pending',\n      name: 'Pending'\n    },\n    {\n      id: 'failed',\n      name: 'Failed'\n    }\n  ];\n\n  const handleStatusChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    let value = null;\n\n    if (e.target.value !== 'all') {\n      value = e.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handleSelectAllCryptoOrders = (\n    event: ChangeEvent<HTMLInputElement>\n  ): void => {\n    setSelectedCryptoOrders(\n      event.target.checked\n        ? cryptoOrders.map((cryptoOrder) => cryptoOrder.id)\n        : []\n    );\n  };\n\n  const handleSelectOneCryptoOrder = (\n    event: ChangeEvent<HTMLInputElement>,\n    cryptoOrderId: string\n  ): void => {\n    if (!selectedCryptoOrders.includes(cryptoOrderId)) {\n      setSelectedCryptoOrders((prevSelected) => [\n        ...prevSelected,\n        cryptoOrderId\n      ]);\n    } else {\n      setSelectedCryptoOrders((prevSelected) =>\n        prevSelected.filter((id) => id !== cryptoOrderId)\n      );\n    }\n  };\n\n  const handlePageChange = (event: any, newPage: number): void => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const filteredCryptoOrders = applyFilters(cryptoOrders, filters);\n  const paginatedCryptoOrders = applyPagination(\n    filteredCryptoOrders,\n    page,\n    limit\n  );\n  const selectedSomeCryptoOrders =\n    selectedCryptoOrders.length > 0 &&\n    selectedCryptoOrders.length < cryptoOrders.length;\n  const selectedAllCryptoOrders =\n    selectedCryptoOrders.length === cryptoOrders.length;\n  const theme = useTheme();\n\n  return (\n    <Card>\n      {selectedBulkActions && (\n        <Box flex={1} p={2}>\n          <BulkActions />\n        </Box>\n      )}\n      {!selectedBulkActions && (\n        <CardHeader\n          action={\n            <Box width={150}>\n              <FormControl fullWidth variant=\"outlined\">\n                <InputLabel>Status</InputLabel>\n                <Select\n                  value={filters.status || 'all'}\n                  onChange={handleStatusChange}\n                  label=\"Status\"\n                  autoWidth\n                >\n                  {statusOptions.map((statusOption) => (\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\n                      {statusOption.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          }\n          title=\"Recent Orders\"\n        />\n      )}\n      <Divider />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  color=\"primary\"\n                  checked={selectedAllCryptoOrders}\n                  indeterminate={selectedSomeCryptoOrders}\n                  onChange={handleSelectAllCryptoOrders}\n                />\n              </TableCell>\n              <TableCell>Order Details</TableCell>\n              <TableCell>Order ID</TableCell>\n              <TableCell>Source</TableCell>\n              <TableCell align=\"right\">Amount</TableCell>\n              <TableCell align=\"right\">Status</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedCryptoOrders.map((cryptoOrder) => {\n              const isCryptoOrderSelected = selectedCryptoOrders.includes(\n                cryptoOrder.id\n              );\n              return (\n                <TableRow\n                  hover\n                  key={cryptoOrder.id}\n                  selected={isCryptoOrderSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"primary\"\n                      checked={isCryptoOrderSelected}\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                        handleSelectOneCryptoOrder(event, cryptoOrder.id)\n                      }\n                      value={isCryptoOrderSelected}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.orderDetails}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {format(cryptoOrder.orderDate, 'MMMM dd yyyy')}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.orderID}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.sourceName}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {cryptoOrder.sourceDesc}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.amountCrypto}\n                      {cryptoOrder.cryptoCurrency}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {numeral(cryptoOrder.amount).format(\n                        `${cryptoOrder.currency}0,0.00`\n                      )}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {getStatusLabel(cryptoOrder.status)}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Tooltip title=\"Edit Order\" arrow>\n                      <IconButton\n                        sx={{\n                          '&:hover': {\n                            background: theme.colors.primary.lighter\n                          },\n                          color: theme.palette.primary.main\n                        }}\n                        color=\"inherit\"\n                        size=\"small\"\n                      >\n                        <EditTwoToneIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete Order\" arrow>\n                      <IconButton\n                        sx={{\n                          '&:hover': { background: theme.colors.error.lighter },\n                          color: theme.palette.error.main\n                        }}\n                        color=\"inherit\"\n                        size=\"small\"\n                      >\n                        <DeleteTwoToneIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box p={2}>\n        <TablePagination\n          component=\"div\"\n          count={filteredCryptoOrders.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25, 30]}\n        />\n      </Box>\n    </Card>\n  );\n};\n\nRecentOrdersTable.propTypes = {\n  cryptoOrders: PropTypes.array.isRequired\n};\n\nRecentOrdersTable.defaultProps = {\n  cryptoOrders: []\n};\n\nexport default RecentOrdersTable;\n","import { Card } from '@mui/material';\nimport { CryptoOrder } from 'src/models/crypto_order';\nimport RecentOrdersTable from './RecentOrdersTable';\nimport { subDays } from 'date-fns';\n\nfunction RecentOrders() {\n\n  const cryptoOrders: CryptoOrder[] = [\n    {\n      id: '1',\n      orderDetails: 'Fiat Deposit',\n      orderDate: new Date().getTime(),\n      status: 'completed',\n      orderID: 'VUVX709ET7BY',\n      sourceName: 'Bank Account',\n      sourceDesc: '*** 1111',\n      amountCrypto: 34.4565,\n      amount: 56787,\n      cryptoCurrency: 'ETH',\n      currency: '$'\n    },\n    {\n      id: '2',\n      orderDetails: 'Fiat Deposit',\n      orderDate: subDays(new Date(), 1).getTime(),\n      status: 'completed',\n      orderID: '23M3UOG65G8K',\n      sourceName: 'Bank Account',\n      sourceDesc: '*** 1111',\n      amountCrypto: 6.58454334,\n      amount: 8734587,\n      cryptoCurrency: 'BTC',\n      currency: '$'\n    },\n    {\n      id: '3',\n      orderDetails: 'Fiat Deposit',\n      orderDate: subDays(new Date(), 5).getTime(),\n      status: 'failed',\n      orderID: 'F6JHK65MS818',\n      sourceName: 'Bank Account',\n      sourceDesc: '*** 1111',\n      amountCrypto: 6.58454334,\n      amount: 8734587,\n      cryptoCurrency: 'BTC',\n      currency: '$'\n    },\n    {\n      id: '4',\n      orderDetails: 'Fiat Deposit',\n      orderDate: subDays(new Date(), 55).getTime(),\n      status: 'completed',\n      orderID: 'QJFAI7N84LGM',\n      sourceName: 'Bank Account',\n      sourceDesc: '*** 1111',\n      amountCrypto: 6.58454334,\n      amount: 8734587,\n      cryptoCurrency: 'BTC',\n      currency: '$'\n    },\n    {\n      id: '5',\n      orderDetails: 'Fiat Deposit',\n      orderDate: subDays(new Date(), 56).getTime(),\n      status: 'pending',\n      orderID: 'BO5KFSYGC0YW',\n      sourceName: 'Bank Account',\n      sourceDesc: '*** 1111',\n      amountCrypto: 6.58454334,\n      amount: 8734587,\n      cryptoCurrency: 'BTC',\n      currency: '$'\n    },\n    {\n      id: '6',\n      orderDetails: 'Fiat Deposit',\n      orderDate: subDays(new Date(), 33).getTime(),\n      status: 'completed',\n      orderID: '6RS606CBMKVQ',\n      sourceName: 'Bank Account',\n      sourceDesc: '*** 1111',\n      amountCrypto: 6.58454334,\n      amount: 8734587,\n      cryptoCurrency: 'BTC',\n      currency: '$'\n    },\n    {\n      id: '7',\n      orderDetails: 'Fiat Deposit',\n      orderDate: new Date().getTime(),\n      status: 'pending',\n      orderID: '479KUYHOBMJS',\n      sourceName: 'Bank Account',\n      sourceDesc: '*** 1212',\n      amountCrypto: 2.346546,\n      amount: 234234,\n      cryptoCurrency: 'BTC',\n      currency: '$'\n    },\n    {\n      id: '8',\n      orderDetails: 'Paypal Withdraw',\n      orderDate: subDays(new Date(), 22).getTime(),\n      status: 'completed',\n      orderID: 'W67CFZNT71KR',\n      sourceName: 'Paypal Account',\n      sourceDesc: '*** 1111',\n      amountCrypto: 3.345456,\n      amount: 34544,\n      cryptoCurrency: 'BTC',\n      currency: '$'\n    },\n    {\n      id: '9',\n      orderDetails: 'Fiat Deposit',\n      orderDate: subDays(new Date(), 11).getTime(),\n      status: 'completed',\n      orderID: '63GJ5DJFKS4H',\n      sourceName: 'Bank Account',\n      sourceDesc: '*** 2222',\n      amountCrypto: 1.4389567945,\n      amount: 123843,\n      cryptoCurrency: 'BTC',\n      currency: '$'\n    },\n    {\n      id: '10',\n      orderDetails: 'Wallet Transfer',\n      orderDate: subDays(new Date(), 123).getTime(),\n      status: 'failed',\n      orderID: '17KRZHY8T05M',\n      sourceName: 'Wallet Transfer',\n      sourceDesc: \"John's Cardano Wallet\",\n      amountCrypto: 765.5695,\n      amount: 7567,\n      cryptoCurrency: 'ADA',\n      currency: '$'\n    }\n  ];\n\n  return (\n    <Card>\n      <RecentOrdersTable cryptoOrders={cryptoOrders} />\n    </Card>\n  );\n}\n\nexport default RecentOrders;\n","import { Helmet } from 'react-helmet-async';\nimport PageHeader from './PageHeader';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Grid, Container } from '@mui/material';\nimport Footer from 'src/components/Footer';\n\nimport RecentOrders from './RecentOrders';\n\nfunction ApplicationsTransactions() {\n  return (\n    <>\n      <Helmet>\n        <title>Transactions - Applications</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <RecentOrders />\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default ApplicationsTransactions;\n"],"sourceRoot":""}